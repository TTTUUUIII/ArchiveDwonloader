plugins {
    id 'java'
    id 'application'
}

group = 'org.archive'
def versionName = "1.2-alpha"
if (getGitBranch() == "main") {
    version = versionName
} else {
    version = "${versionName}-${getGitBranch()}"
}

repositories {
    mavenCentral()
}
application {
    mainClass = "org.archive.spider.Main"
}
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes "Main-Class": application.mainClass
    }
    from {
        configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

dependencies {
    implementation 'me.tongfei:progressbar:0.10.1'
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    implementation 'org.jsoup:jsoup:1.15.3'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

def getGitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}
